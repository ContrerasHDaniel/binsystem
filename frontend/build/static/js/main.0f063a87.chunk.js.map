{"version":3,"sources":["components/Landing/MaterialService.ts","components/Landing/ContainerService.ts","components/Landing/AlmacenExterno.tsx","components/Landing/AlmacenInterno.tsx","assets/logo512.png","components/Landing/LandingPage.tsx","reportWebVitals.ts","index.tsx"],"names":["getMaterials","a","axios","get","getContainers","setMaterialID","containerID","materialID","patch","useStyles","makeStyles","theme","createStyles","cardEscoria","height","maxHeight","backgroundColor","textEscoria","textAlign","alignItems","fontSize","color","marginTop","cardCuarentena","minHeight","borderStyle","borderColor","textCuarentena","fontWeight","cardContExt","width","minWidth","buttonEmpty","margin","spacing","buttonFull","AlmacenExterno","containers","setOriginMaterialID","setOriginContainerID","originMaterialID","setDestContainerID","handleAlertOpen","handleConfirmDialogOpen","classes","useState","buttonSelected","setButtonSelected","handleSelectDest","handleSelectOrigin","currentButton","Grid","container","item","xs","Card","className","Typography","variant","map","id","MaterialID","Button","onClick","ContainerID","startIcon","cardMobiliario","textMobiliario","textoExterior","cardCharger","AlmacenInterno","root","flexGrow","paper","padding","palette","text","secondary","gridLabel1","alignContent","dialogLabel","dialogLabel2","menuButton","marginRight","title","marginLeft","logo","maxWidth","appbarModal","logoModal","LandingPage","materials","setMaterials","setContainers","originContainerID","destContainerID","openAlert","setOpenAlert","openConfirmDialog","setOpenConfirmDialog","materialMovedInfo","setMaterialMovedInfo","handleAlertClose","find","material","handleConfirmDialogClose","handleConfirmAction","containerServices","window","location","reload","loadMaterials","materialServices","res","data","loadContainers","useEffect","AppBar","position","style","Toolbar","src","alt","Paper","filter","includes","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","fullWidth","FormLabel","lote","material_type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","THEME","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","ReactDOM","render","StrictMode","path","component","document","getElementById"],"mappings":"gQAEaA,EAAY,uCAAG,sBAAAC,EAAA,sEACXC,IAAMC,IAAI,mCADC,mFAAH,qDCAZC,EAAa,uCAAG,sBAAAH,EAAA,sEACZC,IAAMC,IAAI,oCADE,mFAAH,qDAIbE,EAAa,uCAAG,WAAMC,EAAqBC,GAA3B,SAAAN,EAAA,sEACZC,IAAMM,MAAN,2CAAgDF,GAAe,CAAC,WAAcC,GAAyB,OAD3F,mFAAH,wD,uFCIpBE,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,YAAa,CACXC,OAAQ,IACRC,UAAW,IACXC,gBAAiB,WAEnBC,YAAa,CACXC,UAAW,SACXC,WAAY,SACZC,SAAU,GACVC,MAAO,OACPC,UAAW,IAEbC,eAAgB,CACdT,OAAQ,GACRU,UAAW,GACXC,YAAa,SACbC,YAAa,MACbP,WAAY,SACZD,UAAW,UAEbS,eAAgB,CACdL,UAAW,GACXM,WAAY,QAEdC,YAAa,CACXC,MAAO,IACPC,SAAU,IACVb,UAAW,UAEbc,YAAa,CACXC,OAAQtB,EAAMuB,QAAQ,GACtBJ,MAAO,IACPC,SAAU,IACVjB,OAAQ,GACRU,UAAW,GACXC,YAAa,QACbC,YAAa,QAEfS,WAAY,CACVF,OAAQtB,EAAMuB,QAAQ,GACtBJ,MAAO,IACPC,SAAU,IACVf,gBAAiB,UACjBF,OAAQ,GACRU,UAAW,SAyHFY,EA1GQ,SAAC,GAQV,IAPZC,EAOW,EAPXA,WACAC,EAMW,EANXA,oBACAC,EAKW,EALXA,qBACAC,EAIW,EAJXA,iBACAC,EAGW,EAHXA,mBACAC,EAEW,EAFXA,gBACAC,EACW,EADXA,wBAEMC,EAAUnC,IADL,EAGiCoC,mBAAiB,GAHlD,mBAGJC,EAHI,KAGYC,EAHZ,KAKLC,EAAgB,uCAAG,WACvB1C,GADuB,SAAAL,EAAA,sDAGnBuC,GACFC,EAAmBnC,GACnBqC,KAEAD,IAPqB,2CAAH,sDAWhBO,EAAqB,SACzBC,EACA3C,EACAD,GAEuB,IAAnBwC,GACFR,EAAoB,GACpBC,EAAqB,IACrBQ,EAAkB,KAElBT,EAAoB/B,GACpBgC,EAAqBjC,GACrByC,EAAkBG,KAItB,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQ/B,YAAzB,SACE,cAAC4C,EAAA,EAAD,CAAYD,UAAWZ,EAAQ3B,YAA/B,uCAKJ,cAACkC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQrB,eAAgBmC,QAAQ,WAAjD,SACE,cAACD,EAAA,EAAD,CAAYD,UAAWZ,EAAQjB,eAA/B,yCAOR,cAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACH,EAAA,EAAD,CAAMC,WAAS,EAAf,SACGf,EAAWsB,KAAI,SAACP,GAAuB,IAAZQ,EAAW,uDAAN,EAE/B,OADAA,GAAU,EACLR,EAAUS,WAgBX,cAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACQ,EAAA,EAAD,CACEC,QAAS,kBACPd,EACEW,EACAR,EAAUS,WACVT,EAAUY,cAGdN,QAASZ,IAAmBc,EAAK,WAAa,YAC9CvC,MAAOyB,IAAmBc,EAAK,UAAY,UAC3CJ,UAAWZ,EAAQT,WACnB8B,UAAW,cAAC,IAAD,IAXb,SAaGb,EAAUY,eAdQZ,EAAUY,aAdjC,cAACb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACQ,EAAA,EAAD,CACEC,QAAS,kBAAKf,EAAiBI,EAAUY,cACzCN,QAAQ,WACRrC,MAAM,UACNmC,UAAWZ,EAAQZ,YACnBiC,UAAW,cAAC,IAAD,IALb,SAOGb,EAAUY,eARQZ,EAAUY,wB,kBChI3CvD,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXsD,eAAgB,CACdlD,gBAAiB,OACjBS,YAAa,QACbC,YAAa,QACbZ,OAAQ,IAEVqD,eAAgB,CACdjD,UAAW,SACXE,SAAU,IAEZgD,cAAe,CACblD,UAAW,SACXE,SAAU,IAEZiD,YAAa,CACXjD,SAAU,GACVK,YAAa,QACbC,YAAa,QACbZ,OAAQ,IAEVkB,YAAa,CACXC,OAAQtB,EAAMuB,QAAQ,GACtBJ,MAAO,IACPC,SAAU,IACVjB,OAAQ,GACRU,UAAW,GACXC,YAAa,QACbC,YAAa,QAEfS,WAAY,CACVF,OAAQtB,EAAMuB,QAAQ,GACtBJ,MAAO,IACPC,SAAU,IACVf,gBAAiB,UACjBF,OAAQ,GACRU,UAAW,SA8KF8C,EA/JQ,SAAC,GAQV,IAPZjC,EAOW,EAPXA,WACAC,EAMW,EANXA,oBACAC,EAKW,EALXA,qBACAC,EAIW,EAJXA,iBACAC,EAGW,EAHXA,mBACAC,EAEW,EAFXA,gBACAC,EACW,EADXA,wBAEMC,EAAUnC,IADL,EAGiCoC,mBAAiB,GAHlD,mBAGJC,EAHI,KAGYC,EAHZ,KAKLC,EAAgB,uCAAG,WACvB1C,GADuB,SAAAL,EAAA,sDAGnBuC,GACFC,EAAmBnC,GACnBqC,KAEAD,IAPqB,2CAAH,sDAWhBO,EAAqB,SACzBC,EACA3C,EACAD,GAEuB,IAAnBwC,GACFR,EAAoB,GACpBC,EAAqB,IACrBQ,EAAkB,KAElBR,EAAqBjC,GACrBgC,EAAoB/B,GACpBwC,EAAkBG,KAItB,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,eAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQsB,eAAzB,SACE,cAACT,EAAA,EAAD,CAAYD,UAAWZ,EAAQuB,eAA/B,yBAIN,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACG,EAAA,EAAD,CAAYD,UAAWZ,EAAQwB,cAA/B,6BAIF,cAACjB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQyB,YAAzB,SACE,cAACZ,EAAA,EAAD,CAAYD,UAAWZ,EAAQwB,cAA/B,4BAIN,eAACjB,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQsB,eAAzB,SACE,cAACT,EAAA,EAAD,CAAYD,UAAWZ,EAAQuB,eAA/B,uBAIN,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACG,EAAA,EAAD,CAAYD,UAAWZ,EAAQwB,cAA/B,2CAIF,cAACjB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQsB,eAAzB,SACE,cAACT,EAAA,EAAD,CAAYD,UAAWZ,EAAQuB,eAA/B,yBAIN,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQyB,YAAzB,SACE,cAACZ,EAAA,EAAD,CAAYD,UAAWZ,EAAQwB,cAA/B,+BAKR,cAACjB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQsB,eAAzB,SACE,cAACT,EAAA,EAAD,CAAYD,UAAWZ,EAAQwB,cAA/B,8BAKJ,cAACjB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQsB,eAAzB,SACE,cAACT,EAAA,EAAD,CAAYD,UAAWZ,EAAQwB,cAA/B,kCAKJ,cAACjB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQsB,eAAzB,SACE,cAACT,EAAA,EAAD,CAAYD,UAAWZ,EAAQwB,cAA/B,kCAKH/B,EAAWsB,KAAI,SAACP,GAAuB,IAAZQ,EAAW,uDAAN,EAE/B,OADAA,GAAU,EACLR,EAAUS,WAgBX,cAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACQ,EAAA,EAAD,CACEC,QAAS,kBACPd,EACEW,EACAR,EAAUS,WACVT,EAAUY,cAGdN,QAASZ,IAAmBc,EAAK,WAAa,YAC9CvC,MAAOyB,IAAmBc,EAAK,UAAY,UAC3CJ,UAAWZ,EAAQT,WACnB8B,UAAW,cAAC,IAAD,IAXb,SAaGb,EAAUY,eAdQZ,EAAUY,aAdjC,cAACb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACQ,EAAA,EAAD,CACEC,QAAS,kBAAKf,EAAiBI,EAAUY,cACzCN,QAAQ,WACRrC,MAAM,UACNmC,UAAWZ,EAAQZ,YACnBiC,UAAW,cAAC,IAAD,IALb,SAOGb,EAAUY,eARQZ,EAAUY,yB,gFCpLlC,MAA0B,oCCuBnCvD,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX2D,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAAS/D,EAAMuB,QAAQ,GACvBhB,UAAW,SACXG,MAAOV,EAAMgE,QAAQC,KAAKC,WAE5BC,WAAY,CACVC,aAAc,SACd5D,WAAY,SACZD,UAAW,SAEb8D,YAAa,CACX3D,MAAO,QACPD,SAAU,GACVQ,WAAY,KAEdqD,aAAc,CACZ5D,MAAO,UACPD,SAAU,GACVQ,WAAY,KAEdsD,WAAY,CACVC,YAAaxE,EAAMuB,QAAQ,IAE7BkD,MAAO,CACLZ,SAAU,EACVnD,MAAO,QACPgE,WAAY,IAEdC,KAAM,CACJC,SAAU,IACVxE,UAAW,KAEbyE,YAAa,CACX1E,OAAQ,GACRC,UAAW,GACXC,gBAAiB,WAEnByE,UAAW,CACT3E,OAAQ,GACRC,UAAW,GACXoE,YAAa,GACbE,WAAY,aA6NHK,EAxNK,WAClB,IAAM9C,EAAUnC,IADQ,EAEUoC,mBAAqB,IAF/B,mBAEjB8C,EAFiB,KAENC,EAFM,OAGY/C,mBAAsB,IAHlC,mBAGjBR,EAHiB,KAGLwD,EAHK,OAI0BhD,mBAAiB,IAJ3C,mBAIjBiD,EAJiB,KAIEvD,EAJF,OAKwBM,mBAAiB,GALzC,mBAKjBL,EALiB,KAKCF,EALD,OAMsBO,mBAAiB,IANvC,mBAMjBkD,EANiB,KAMAtD,EANA,OAOUI,oBAAS,GAPnB,mBAOjBmD,EAPiB,KAONC,EAPM,OAQ0BpD,oBAAS,GARnC,mBAQjBqD,EARiB,KAQEC,EARF,OAS0BtD,qBAT1B,oBASjBuD,GATiB,MASEC,GATF,MAWlB3D,GAAkB,WACtBuD,GAAa,IAGTK,GAAmB,WACvBL,GAAa,IAGTtD,GAA0B,WAC9B0D,GACEV,EAAUY,MAAK,SAACC,GAAD,OAAcA,EAAS3C,aAAerB,MAEvD2D,GAAqB,IAGjBM,GAA2B,WAC/BN,GAAqB,IAGjBO,GAAmB,uCAAG,sBAAAzG,EAAA,sEACpB0G,EAAgCZ,EAAiBvD,GAD7B,uBAEpBmE,EAAgCb,GAFZ,OAG1BW,KACAG,OAAOC,SAASC,QAAO,GAJG,2CAAH,qDAOnBC,GAAa,uCAAG,4BAAA9G,EAAA,sEACF+G,IADE,OACdC,EADc,OAEpBrB,EAAaqB,EAAIC,MAFG,2CAAH,qDAKbC,GAAc,uCAAG,4BAAAlH,EAAA,sEACH0G,IADG,OACfM,EADe,OAErBpB,EAAcoB,EAAIC,MAFG,2CAAH,qDAUpB,OALAE,qBAAU,WACRL,KACAI,OACC,IAGD,sBAAK3D,UAAWZ,EAAQ2B,KAAxB,UACE,cAAC8C,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEvG,gBAAiB,QAApD,SACE,eAACwG,EAAA,EAAD,WACE,qBAAKC,IAAKnC,EAAMoC,IAAI,OAAOlE,UAAWZ,EAAQ0C,OAC9C,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWZ,EAAQwC,MAA5C,8BAKJ,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAGqF,MAAO,CAAEjG,UAAW,IAAhD,UACE,cAAC6B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACqE,EAAA,EAAD,CAAOnE,UAAWZ,EAAQ6B,MAA1B,iCAEF,cAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACqE,EAAA,EAAD,CAAOnE,UAAWZ,EAAQ6B,MAA1B,iCAEF,cAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CACEd,iBAAkBA,EAClBG,wBAAyBA,GACzBD,gBAAiBA,GACjBH,qBAAsBA,EACtBD,oBAAqBA,EACrBG,mBAAoBA,EACpBJ,WAAYA,EAAWuF,QAAO,SAACxE,GAAD,OAC5BA,EAAUY,YAAY6D,SAAS,YAYrC,cAAC1E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CACEd,iBAAkBA,EAClBG,wBAAyBA,GACzBD,gBAAiBA,GACjBH,qBAAsBA,EACtBD,oBAAqBA,EACrBG,mBAAoBA,EACpBJ,WAAYA,EAAWuF,QAAO,SAACxE,GAAD,OAC5BA,EAAUY,YAAY6D,SAAS,YAIrC,eAACC,EAAA,EAAD,CACEC,KAAM/B,EACNgC,QAAS1B,GACT2B,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAACC,EAAA,EAAD,CAAavE,GAAG,qBAAhB,SACG,iCAEH,cAACwE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBzE,GAAG,2BAAtB,mFAKF,cAAC0E,EAAA,EAAD,UACE,cAACxE,EAAA,EAAD,CAAQC,QAASuC,GAAkBjF,MAAM,UAAzC,4BAMJ,eAACyG,EAAA,EAAD,CACEC,KAAM7B,EACN8B,QAASvB,GACTwB,kBAAgB,qBAChBC,mBAAiB,2BACjBK,WAAS,EALX,UAOE,cAAClB,EAAA,EAAD,CAAQC,SAAS,SAAS9D,UAAWZ,EAAQ4C,YAA7C,SACE,eAACgC,EAAA,EAAD,WACE,cAAC/D,EAAA,EAAD,CACEC,QAAQ,KACR6D,MAAO,CAAElC,WAAY,GAAIhE,MAAO,WAFlC,6BAMA,qBAAKoG,IAAKnC,EAAMoC,IAAI,OAAOlE,UAAWZ,EAAQ6C,iBAGlD,cAAC0C,EAAA,EAAD,CAAavE,GAAG,qBAAqB2D,MAAO,CAAErG,UAAW,UAAzD,SACG,qDAEH,cAACkH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBzE,GAAG,2BAAtB,SACE,cAACT,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,SACE,eAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,UAAWZ,EAAQkC,WAArC,SACE,eAAC0D,EAAA,EAAD,CAAWhF,UAAWZ,EAAQqC,aAA9B,wBACc,SAGhB,cAAC9B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACkF,EAAA,EAAD,CAAWhF,UAAWZ,EAAQoC,YAA9B,SACGc,SAIP,eAAC3C,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,UAAWZ,EAAQkC,WAArC,SACE,eAAC0D,EAAA,EAAD,CAAWhF,UAAWZ,EAAQqC,aAA9B,yBACe,SAGjB,cAAC9B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACkF,EAAA,EAAD,CAAWhF,UAAWZ,EAAQoC,YAA9B,SACGe,SAIP,eAAC5C,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,UAAWZ,EAAQkC,WAArC,SACE,eAAC0D,EAAA,EAAD,CAAWhF,UAAWZ,EAAQqC,aAA9B,kBACQ,SAGV,cAAC9B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACkF,EAAA,EAAD,CAAWhF,UAAWZ,EAAQoC,YAA9B,gBACGoB,SADH,IACGA,QADH,EACGA,GAAmBqC,YAI1B,eAACtF,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,EAAzB,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,UAAWZ,EAAQkC,WAArC,SACE,eAAC0D,EAAA,EAAD,CAAWhF,UAAWZ,EAAQqC,aAA9B,sBACY,SAGd,cAAC9B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACkF,EAAA,EAAD,CAAWhF,UAAWZ,EAAQoC,YAA9B,gBACGoB,SADH,IACGA,QADH,EACGA,GAAmBsC,8BAQlC,eAACJ,EAAA,EAAD,WACE,cAACxE,EAAA,EAAD,CAAQC,QAAS2C,GAAqBrF,MAAM,UAA5C,uBAGA,cAACyC,EAAA,EAAD,CAAQC,QAAS0C,GAA0BpF,MAAM,YAAjD,mCC1QGsH,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDRQ,EAAQC,YAAe,CAC3BC,WAAY,CACVC,WAAW,wBACXnI,SAAU,GACVoI,gBAAiB,IACjBC,kBAAmB,IACnBC,iBAAkB,OAItBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAkBlJ,MAAOyI,EAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOU,KAAK,IAAIC,UAAWrE,YAKnCsE,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.0f063a87.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getMaterials = async () => {\n    return await axios.get('http://localhost:4000/materials')\n}","import axios from 'axios'\n\nexport const getContainers = async () => {\n    return await axios.get('http://localhost:4000/containers')\n}\n\nexport const setMaterialID = async(containerID: string, materialID?: number) => {\n    return await axios.patch(`http://localhost:4000/containers/${containerID}`, {'MaterialID': materialID ? materialID: null})\n}","import React, { useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport PresentToAllIcon from \"@material-ui/icons/PresentToAll\";\nimport PresentToAllTwoToneIcon from \"@material-ui/icons/PresentToAllTwoTone\";\nimport { Typography } from \"@material-ui/core\";\nimport { Container } from \"./Container\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cardEscoria: {\n      height: 150,\n      maxHeight: 150,\n      backgroundColor: \"#969696\",\n    },\n    textEscoria: {\n      textAlign: \"center\",\n      alignItems: \"center\",\n      fontSize: 24,\n      color: \"#fff\",\n      marginTop: 30,\n    },\n    cardCuarentena: {\n      height: 50,\n      minHeight: 50,\n      borderStyle: \"dashed\",\n      borderColor: \"red\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n    },\n    textCuarentena: {\n      marginTop: 10,\n      fontWeight: \"bold\",\n    },\n    cardContExt: {\n      width: 180,\n      minWidth: 100,\n      textAlign: \"center\",\n    },\n    buttonEmpty: {\n      margin: theme.spacing(1),\n      width: 150,\n      minWidth: 150,\n      height: 50,\n      minHeight: 50,\n      borderStyle: 'solid',\n      borderColor: 'blue'\n    },\n    buttonFull: {\n      margin: theme.spacing(1),\n      width: 150,\n      minWidth: 150,\n      backgroundColor: \"#e8ce71\",\n      height: 50,\n      minHeight: 50,\n    },\n  })\n);\n\nexport interface Props {\n  containers: Container[];\n  originMaterialID: number;\n  setOriginMaterialID: any;\n  setOriginContainerID: any;\n  setDestContainerID: any;\n  handleAlertOpen: any;\n  handleConfirmDialogOpen: any;\n}\n\nconst AlmacenExterno = ({\n  containers,\n  setOriginMaterialID,\n  setOriginContainerID,\n  originMaterialID,\n  setDestContainerID,\n  handleAlertOpen,\n  handleConfirmDialogOpen\n}: Props) => {\n  const classes = useStyles();\n\n  const [buttonSelected, setButtonSelected] = useState<number>(0);\n\n  const handleSelectDest = async (\n    containerID: string\n  ) => {\n    if (originMaterialID) {\n      setDestContainerID(containerID)\n      handleConfirmDialogOpen()\n    } else {\n      handleAlertOpen()\n    }\n  }\n\n  const handleSelectOrigin = (\n    currentButton: number,\n    materialID: number,\n    containerID: string\n  ) => {\n    if (buttonSelected !== 0) {\n      setOriginMaterialID(0);\n      setOriginContainerID(\"\");\n      setButtonSelected(0);\n    } else {\n      setOriginMaterialID(materialID);\n      setOriginContainerID(containerID);\n      setButtonSelected(currentButton);\n    }\n  };\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={2}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Card className={classes.cardEscoria}>\n              <Typography className={classes.textEscoria}>\n                Almacén de Escoria\n              </Typography>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card className={classes.cardCuarentena} variant=\"outlined\">\n              <Typography className={classes.textCuarentena}>\n                Cuarentena Externa\n              </Typography>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={10}>\n        <Grid container>\n          {containers.map((container, id = 0) => {\n            id = id + 1;\n            if (!container.MaterialID) {\n              return (\n                <Grid item xs={3} key={container.ContainerID}>\n                  <Button\n                    onClick={()=> handleSelectDest(container.ContainerID)}\n                    variant=\"outlined\"\n                    color=\"default\"\n                    className={classes.buttonEmpty}\n                    startIcon={<PresentToAllIcon />}\n                  >\n                    {container.ContainerID}\n                  </Button>\n                </Grid>\n              );\n            } else {\n              return (\n                <Grid item xs={3} key={container.ContainerID}>\n                  <Button\n                    onClick={() =>\n                      handleSelectOrigin(\n                        id,\n                        container.MaterialID,\n                        container.ContainerID\n                      )\n                    }\n                    variant={buttonSelected === id ? \"outlined\" : \"contained\"}\n                    color={buttonSelected === id ? \"primary\" : \"inherit\"}\n                    className={classes.buttonFull}\n                    startIcon={<PresentToAllTwoToneIcon />}\n                  >\n                    {container.ContainerID}\n                  </Button>\n                </Grid>\n              );\n            }\n          })}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AlmacenExterno;\n","import React, { useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { Typography } from \"@material-ui/core\";\nimport { Container } from \"./Container\";\nimport { PresentToAll, PresentToAllTwoTone } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cardMobiliario: {\n      backgroundColor: \"#fff\",\n      borderStyle: \"solid\",\n      borderColor: \"black\",\n      height: 60,\n    },\n    textMobiliario: {\n      textAlign: \"center\",\n      fontSize: 18,\n    },\n    textoExterior: {\n      textAlign: \"center\",\n      fontSize: 12,\n    },\n    cardCharger: {\n      fontSize: 12,\n      borderStyle: \"solid\",\n      borderColor: \"black\",\n      height: 50,\n    },\n    buttonEmpty: {\n      margin: theme.spacing(1),\n      width: 150,\n      minWidth: 150,\n      height: 50,\n      minHeight: 50,\n      borderStyle: 'solid',\n      borderColor: 'blue'\n    },\n    buttonFull: {\n      margin: theme.spacing(1),\n      width: 150,\n      minWidth: 150,\n      backgroundColor: \"#e8ce71\",\n      height: 50,\n      minHeight: 50,\n    },\n  })\n);\n\nexport interface Props {\n  containers: Container[];\n  originMaterialID: number;\n  setOriginMaterialID: any;\n  setOriginContainerID: any;\n  setDestContainerID: any;\n  handleAlertOpen: any;\n  handleConfirmDialogOpen: any;\n}\n\nconst AlmacenInterno = ({\n  containers,\n  setOriginMaterialID,\n  setOriginContainerID,\n  originMaterialID,\n  setDestContainerID,\n  handleAlertOpen,\n  handleConfirmDialogOpen\n}: Props) => {\n  const classes = useStyles();\n\n  const [buttonSelected, setButtonSelected] = useState<number>(0);\n\n  const handleSelectDest = async (\n    containerID: string\n  ) => {\n    if (originMaterialID) {\n      setDestContainerID(containerID)\n      handleConfirmDialogOpen()\n    } else {\n      handleAlertOpen()\n    }\n  }\n\n  const handleSelectOrigin = (\n    currentButton: number,\n    materialID: number,\n    containerID: string\n  ) => {\n    if (buttonSelected !== 0) {\n      setOriginMaterialID(0);\n      setOriginContainerID(\"\");\n      setButtonSelected(0);\n    } else {\n      setOriginContainerID(containerID);\n      setOriginMaterialID(materialID);\n      setButtonSelected(currentButton);\n    }\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={3}>\n        <Grid container spacing={3}>\n          <Grid item xs={6}></Grid>\n          <Grid item xs={6}>\n            <Card className={classes.cardMobiliario}>\n              <Typography className={classes.textMobiliario}>SW 1</Typography>\n            </Card>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={8}>\n            <Typography className={classes.textoExterior}>\n              Shipping Area\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Card className={classes.cardCharger}>\n              <Typography className={classes.textoExterior}>Charger</Typography>\n            </Card>\n          </Grid>\n        </Grid>\n        <Grid container spacing={3}>\n          <Grid item xs={6}></Grid>\n          <Grid item xs={6}>\n            <Card className={classes.cardMobiliario}>\n              <Typography className={classes.textMobiliario}>HF</Typography>\n            </Card>\n          </Grid>\n        </Grid>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Typography className={classes.textoExterior}>\n              External Lodles Pre-Hatcher\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Card className={classes.cardMobiliario}>\n              <Typography className={classes.textMobiliario}>SW 2</Typography>\n            </Card>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={8}></Grid>\n          <Grid item xs={4}>\n            <Card className={classes.cardCharger}>\n              <Typography className={classes.textoExterior}>Charger</Typography>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={9}>\n        <Grid container spacing={1}>\n          <Grid item xs={2}>\n            <Card className={classes.cardMobiliario}>\n              <Typography className={classes.textoExterior}>\n                Dross Cooler\n              </Typography>\n            </Card>\n          </Grid>\n          <Grid item xs={2}>\n            <Card className={classes.cardMobiliario}>\n              <Typography className={classes.textoExterior}>\n                Rotory Furnace 1\n              </Typography>\n            </Card>\n          </Grid>\n          <Grid item xs={2}>\n            <Card className={classes.cardMobiliario}>\n              <Typography className={classes.textoExterior}>\n                Rotory Furnace 2\n              </Typography>\n            </Card>\n          </Grid>\n          {containers.map((container, id = 0) => {\n            id = id + 1;\n            if (!container.MaterialID) {\n              return (\n                <Grid item xs={3} key={container.ContainerID}>\n                  <Button\n                    onClick={()=> handleSelectDest(container.ContainerID)}\n                    variant=\"outlined\"\n                    color=\"default\"\n                    className={classes.buttonEmpty}\n                    startIcon={<PresentToAll></PresentToAll>}\n                  >\n                    {container.ContainerID}\n                  </Button>\n                </Grid>\n              );\n            } else {\n              return (\n                <Grid item xs={2} key={container.ContainerID}>\n                  <Button\n                    onClick={() =>\n                      handleSelectOrigin(\n                        id,\n                        container.MaterialID,\n                        container.ContainerID\n                      )\n                    }\n                    variant={buttonSelected === id ? \"outlined\" : \"contained\"}\n                    color={buttonSelected === id ? \"primary\" : \"inherit\"}\n                    className={classes.buttonFull}\n                    startIcon={<PresentToAllTwoTone></PresentToAllTwoTone>}\n                  >\n                    {container.ContainerID}\n                  </Button>\n                </Grid>\n              );\n            }\n          })}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AlmacenInterno;\n","export default __webpack_public_path__ + \"static/media/logo512.3ab2a475.png\";","import React, { useEffect, useState } from \"react\";\nimport { Material } from \"./Material\";\nimport { Container } from \"./Container\";\nimport * as materialServices from \"./MaterialService\";\nimport * as containerServices from \"./ContainerService\";\nimport AlmacenExterno from \"./AlmacenExterno\";\nimport AlmacenInterno from \"./AlmacenInterno\";\n//import InternalWH from \"./InternalWH\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport logo from \"../../assets/logo512.png\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n    gridLabel1: {\n      alignContent: \"center\",\n      alignItems: \"center\",\n      textAlign: \"right\",\n    },\n    dialogLabel: {\n      color: \"black\",\n      fontSize: 18,\n      fontWeight: 700,\n    },\n    dialogLabel2: {\n      color: \"#588c66\",\n      fontSize: 18,\n      fontWeight: 800,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      color: \"black\",\n      marginLeft: 10,\n    },\n    logo: {\n      maxWidth: 100,\n      maxHeight: 100,\n    },\n    appbarModal: {\n      height: 60,\n      maxHeight: 60,\n      backgroundColor: \"#b5b3ae\",\n    },\n    logoModal: {\n      height: 50,\n      maxHeight: 50,\n      marginRight: 10,\n      marginLeft: \"auto\",\n    },\n  })\n);\n\nconst LandingPage = () => {\n  const classes = useStyles();\n  const [materials, setMaterials] = useState<Material[]>([]);\n  const [containers, setContainers] = useState<Container[]>([]);\n  const [originContainerID, setOriginContainerID] = useState<string>(\"\");\n  const [originMaterialID, setOriginMaterialID] = useState<number>(0);\n  const [destContainerID, setDestContainerID] = useState<string>(\"\");\n  const [openAlert, setOpenAlert] = useState(false);\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n  const [materialMovedInfo, setMaterialMovedInfo] = useState<Material>();\n\n  const handleAlertOpen = () => {\n    setOpenAlert(true);\n  };\n\n  const handleAlertClose = () => {\n    setOpenAlert(false);\n  };\n\n  const handleConfirmDialogOpen = () => {\n    setMaterialMovedInfo(\n      materials.find((material) => material.MaterialID === originMaterialID)\n    );\n    setOpenConfirmDialog(true);\n  };\n\n  const handleConfirmDialogClose = () => {\n    setOpenConfirmDialog(false);\n  };\n\n  const handleConfirmAction = async () => {\n    await containerServices.setMaterialID(destContainerID, originMaterialID);\n    await containerServices.setMaterialID(originContainerID);\n    handleConfirmDialogClose();\n    window.location.reload(false);\n  };\n\n  const loadMaterials = async () => {\n    const res = await materialServices.getMaterials();\n    setMaterials(res.data);\n  };\n\n  const loadContainers = async () => {\n    const res = await containerServices.getContainers();\n    setContainers(res.data);\n  };\n\n  useEffect(() => {\n    loadMaterials();\n    loadContainers();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{ backgroundColor: \"#fff\" }}>\n        <Toolbar>\n          <img src={logo} alt=\"logo\" className={classes.logo} />\n          <Typography variant=\"h6\" className={classes.title}>\n            Bins System\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Grid container spacing={2} style={{ marginTop: 30 }}>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}> Almacen interno </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}> Almacen externo </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <AlmacenInterno\n            originMaterialID={originMaterialID}\n            handleConfirmDialogOpen={handleConfirmDialogOpen}\n            handleAlertOpen={handleAlertOpen}\n            setOriginContainerID={setOriginContainerID}\n            setOriginMaterialID={setOriginMaterialID}\n            setDestContainerID={setDestContainerID}\n            containers={containers.filter((container) =>\n              container.ContainerID.includes(\"B\")\n            )}\n          ></AlmacenInterno>\n          {/* <InternalWH\n                        originMaterialID = {originMaterialID}\n                        handleConfirmDialogOpen = {handleConfirmDialogOpen}\n                        handleAlertOpen = {handleAlertOpen}\n                        setOriginContainerID = {setOriginContainerID}\n                        setOriginMaterialID = {setOriginMaterialID}\n                        setDestContainerID = {setDestContainerID}\n                        containers={containers.filter(container => container.ContainerID.includes('B'))}></InternalWH> */}\n        </Grid>\n        <Grid item xs={6}>\n          <AlmacenExterno\n            originMaterialID={originMaterialID}\n            handleConfirmDialogOpen={handleConfirmDialogOpen}\n            handleAlertOpen={handleAlertOpen}\n            setOriginContainerID={setOriginContainerID}\n            setOriginMaterialID={setOriginMaterialID}\n            setDestContainerID={setDestContainerID}\n            containers={containers.filter((container) =>\n              container.ContainerID.includes(\"A\")\n            )}\n          ></AlmacenExterno>\n        </Grid>\n        <Dialog\n          open={openAlert}\n          onClose={handleAlertClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Seleccione un origen primero\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Primero debe seleccionar un contenedor de origen que tenga\n              material\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleAlertClose} color=\"default\">\n              Entendido\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          open={openConfirmDialog}\n          onClose={handleConfirmDialogClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          fullWidth\n        >\n          <AppBar position=\"static\" className={classes.appbarModal}>\n            <Toolbar>\n              <Typography\n                variant=\"h6\"\n                style={{ marginLeft: 10, color: \"#588c66\" }}\n              >\n                Traspaso de Bin\n              </Typography>\n              <img src={logo} alt=\"logo\" className={classes.logoModal} />\n            </Toolbar>\n          </AppBar>\n          <DialogTitle id=\"alert-dialog-title\" style={{ textAlign: \"center\" }}>\n            {\"¿Está seguro de mover el bin seleccionado?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={6} className={classes.gridLabel1}>\n                      <FormLabel className={classes.dialogLabel2}>\n                        Bin Origen:{\" \"}\n                      </FormLabel>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormLabel className={classes.dialogLabel}>\n                        {originContainerID}\n                      </FormLabel>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={3}>\n                    <Grid item xs={6} className={classes.gridLabel1}>\n                      <FormLabel className={classes.dialogLabel2}>\n                        Bin Destino:{\" \"}\n                      </FormLabel>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormLabel className={classes.dialogLabel}>\n                        {destContainerID}\n                      </FormLabel>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={3}>\n                    <Grid item xs={6} className={classes.gridLabel1}>\n                      <FormLabel className={classes.dialogLabel2}>\n                        Lote:{\" \"}\n                      </FormLabel>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormLabel className={classes.dialogLabel}>\n                        {materialMovedInfo?.lote}\n                      </FormLabel>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={3}>\n                    <Grid item xs={6} className={classes.gridLabel1}>\n                      <FormLabel className={classes.dialogLabel2}>\n                        Material:{\" \"}\n                      </FormLabel>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormLabel className={classes.dialogLabel}>\n                        {materialMovedInfo?.material_type}\n                      </FormLabel>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleConfirmAction} color=\"primary\">\n              Continuar\n            </Button>\n            <Button onClick={handleConfirmDialogClose} color=\"secondary\">\n              Cancelar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"./components/Landing/LandingPage\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst THEME = createMuiTheme({\n  typography: {\n    fontFamily: `\"Oswald\", sans-serif;`,\n    fontSize: 14,\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={THEME}>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={LandingPage} />\n        </Switch>\n      </BrowserRouter>\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}